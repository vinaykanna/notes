{"version":3,"sources":["components/CreateNoteDialog.js","components/Search.js","firebase.js","components/ViewDialog.js","components/Note.js","components/CategoryTabs.js","components/Notes.js","App.js","serviceWorker.js","index.js"],"names":["CreateNoteDialog","open","setOpen","note","setNote","category","setCategory","createNote","Dialog","fullWidth","maxWidth","DialogTitle","DialogContent","TextField","label","select","error","hasError","helperText","value","onChange","e","target","style","minWidth","MenuItem","Box","mt","multiline","FormHelperText","DialogActions","Button","variant","onClick","background","color","fontWeight","Search","setQuery","m","position","type","autoFocus","width","borderRadius","outline","border","height","paddingLeft","paddingRight","fontSize","left","top","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","notesRef","ref","child","ViewDialog","item","Typography","moment","date","format","paddingTop","size","key","remove","Note","React","useState","bgcolor","p","cursor","split","slice","join","TabPanel","props","children","index","other","role","hidden","id","aria-labelledby","a11yProps","CategoryTabs","notes","setValue","Tabs","event","newValue","aria-label","Tab","map","filter","Notes","setNotes","query","a","push","set","Date","toString","useEffect","on","snapshot","returnArr","forEach","childSnapshot","val","snapshotToArray","length","indexOf","toLowerCase","CircularProgress","v","bottom","right","Fab","Context","createContext","App","selectedNote","setSelectedNote","Provider","Container","overflow","className","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.4a00a8c7.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  Dialog,\n  DialogContent,\n  DialogActions,\n  DialogTitle,\n  TextField,\n  Button,\n  FormHelperText,\n  MenuItem,\n  Box,\n} from '@material-ui/core';\n\nfunction CreateNoteDialog({\n  open,\n  setOpen,\n  note,\n  setNote,\n  category,\n  setCategory,\n  createNote,\n}) {\n  return (\n    <>\n      <Dialog open={open} fullWidth maxWidth='sm'>\n        <DialogTitle>Create Note</DialogTitle>\n        <DialogContent>\n          <TextField\n            label='Select Category'\n            select\n            error={category.hasError}\n            helperText={category.hasError ? 'Select category' : null}\n            value={category.value}\n            onChange={(e) => setCategory({ value: e.target.value })}\n            style={{ minWidth: 200 }}>\n            <MenuItem value='personal'>Personal</MenuItem>\n            <MenuItem value='office'>Office</MenuItem>\n          </TextField>\n          <Box mt={5}>\n            <TextField\n              label='Note'\n              value={note.value}\n              onChange={(e) => setNote({ value: e.target.value })}\n              fullWidth\n              error={note.hasError}\n              helperText={note.hasError ? 'Please enter some text.' : null}\n              multiline\n            />\n            <FormHelperText>\n              {!note.hasError ? 'Please press enter for the next line.' : null}\n            </FormHelperText>\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            variant='contained'\n            onClick={() => {\n              setOpen(false);\n              setNote({\n                value: '',\n              });\n            }}\n            style={{\n              background: '#ffa600',\n              color: 'white',\n              fontWeight: 'bold',\n            }}>\n            Cancel\n          </Button>\n          <Button\n            variant='contained'\n            onClick={createNote}\n            style={{\n              background: '#ffa600',\n              color: 'white',\n              fontWeight: 'bold',\n            }}>\n            Create\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n\nexport default CreateNoteDialog;\n","import React from 'react';\nimport { Box } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\n\nfunction Search({ setQuery }) {\n  return (\n    <>\n      <Box m={2} position='relative'>\n        <input\n          type='text'\n          autoFocus\n          style={{\n            width: '90%',\n            borderRadius: 24,\n            outline: 'none',\n            border: 'none',\n            background: 'rgba(92, 92, 92, 0.4)',\n            height: 50,\n            color: 'white',\n            paddingLeft: 50,\n            paddingRight: 30,\n            fontSize: 22,\n          }}\n          onChange={(e) => setQuery(e.target.value)}\n        />\n        <SearchIcon\n          style={{\n            color: 'white',\n            position: 'absolute',\n            left: 20,\n            top: 16,\n          }}\n        />\n      </Box>\n    </>\n  );\n}\n\nexport default Search;\n","import * as firebase from 'firebase';\n\nconst config = {\n  apiKey: 'AIzaSyAg0HrBZ9nOp_mE8AHWEX-LpHsfMP5GcYM',\n  authDomain: 'notes-95e53.firebaseapp.com',\n  databaseURL: 'https://notes-95e53.firebaseio.com',\n  projectId: 'notes-95e53',\n  storageBucket: 'notes-95e53.appspot.com',\n  messagingSenderId: '987394703507',\n  appId: '1:987394703507:web:08123b65af59a625b9cd66',\n  measurementId: 'G-J3QE40N7XD',\n};\n\nfirebase.initializeApp(config);\nconst databaseRef = firebase.database().ref();\nexport const notesRef = databaseRef.child('notes');\n","import React from 'react';\nimport {\n  Dialog,\n  DialogContent,\n  DialogActions,\n  Typography,\n  Button,\n} from '@material-ui/core';\nimport moment from 'moment';\nimport { notesRef } from '../firebase';\n\nfunction ViewDialog({ open, setOpen, item }) {\n  function onDelete() {\n    notesRef.child(item.key).remove();\n    setOpen(false);\n  }\n  return (\n    <>\n      <Dialog open={open} fullWidth maxWidth='sm'>\n        <DialogContent>\n          <Typography variant='caption' style={{ color: '#ffa600' }}>\n            {moment(item.date).format('Do MMMM YYYY, h:mm a')}\n          </Typography>\n          <Typography variant='body1' style={{ paddingTop: 5 }}>\n            {item.value}\n          </Typography>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            size='small'\n            variant='outlined'\n            onClick={() => setOpen(false)}\n            style={{ border: '1px solid #ffa600' }}>\n            Cancel\n          </Button>\n          <Button\n            size='small'\n            variant='outlined'\n            onClick={onDelete}\n            style={{ border: '1px solid #ffa600' }}>\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n\nexport default ViewDialog;\n","import React from 'react';\nimport { Box, Typography } from '@material-ui/core';\nimport moment from 'moment';\nimport ViewDialog from './ViewDialog';\n\nfunction Note({ item }) {\n  const [open, setOpen] = React.useState(false);\n  function onNoteClick() {\n    setOpen(true);\n  }\n  return (\n    <>\n      <Box\n        bgcolor='rgba(92, 92, 92, 0.4)'\n        borderRadius='6px'\n        p={1}\n        m={2}\n        onClick={onNoteClick}\n        style={{ cursor: 'pointer' }}>\n        <Typography variant='caption' style={{ color: '#ffa600' }}>\n          {moment(item.date).format('MMM YYYY')}\n        </Typography>\n        <Typography variant='body1' style={{ color: 'white', paddingTop: 5 }}>\n          {item.value.split(' ').slice(0, 10).join(' ')}\n        </Typography>\n        <Typography variant='caption' style={{ color: 'lightgrey' }}>\n          {moment(item.date).format('Do MMMM YYYY, h:mm a')}\n        </Typography>\n      </Box>\n      <ViewDialog open={open} setOpen={setOpen} item={item} />\n    </>\n  );\n}\n\nexport default Note;\n","import React from 'react';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Note from './Note';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n  return (\n    <div\n      role='tabpanel'\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}>\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nfunction CategoryTabs({ notes }) {\n  const [value, setValue] = React.useState(0);\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div>\n      <Tabs\n        value={value}\n        onChange={handleChange}\n        aria-label='simple tabs example'>\n        <Tab style={{ color: 'white' }} label='All Notes' {...a11yProps(0)} />\n        <Tab style={{ color: 'white' }} label='Personal' {...a11yProps(1)} />\n        <Tab style={{ color: 'white' }} label='Office' {...a11yProps(2)} />\n      </Tabs>\n      <TabPanel value={value} index={0}>\n        {notes.map((item, index) => (\n          <Note item={item} />\n        ))}\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        {notes\n          .filter((item) => item.category === 'personal')\n          .map((note, index) => (\n            <Note item={note} />\n          ))}\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        {notes\n          .filter((item) => item.category === 'office')\n          .map((note, index) => (\n            <Note item={note} />\n          ))}\n      </TabPanel>\n    </div>\n  );\n}\nexport default CategoryTabs;\n","import React from 'react';\nimport { Box, Fab, CircularProgress } from '@material-ui/core';\nimport CreateNoteDialog from './CreateNoteDialog';\nimport AddIcon from '@material-ui/icons/Add';\nimport Search from './Search';\nimport CategoryTabs from './CategoryTabs';\nimport { notesRef } from '../firebase';\n\nfunction Notes() {\n  const [notes, setNotes] = React.useState([]);\n\n  const [note, setNote] = React.useState({\n    value: '',\n    hasError: false,\n  });\n\n  const [category, setCategory] = React.useState({\n    category: '',\n    hasError: false,\n  });\n\n  const [open, setOpen] = React.useState(false);\n\n  const [query, setQuery] = React.useState('');\n\n  async function createNote() {\n    if (!note.value) {\n      setNote({\n        value: '',\n        category: '',\n        hasError: true,\n      });\n    }\n    if (!category.value) {\n      setCategory({\n        category: '',\n        hasError: true,\n      });\n    } else {\n      notesRef.push().set({\n        value: note.value,\n        category: category.value,\n        date: new Date().toString(),\n      });\n      setOpen(false);\n      setNote({\n        value: '',\n        hasError: false,\n      });\n      setCategory({\n        value: '',\n        hasError: false,\n      });\n    }\n  }\n\n  React.useEffect(() => {\n    notesRef.on('value', (snapshot) => {\n      snapshotToArray(snapshot);\n    });\n  }, []);\n\n  function snapshotToArray(snapshot) {\n    var returnArr = [];\n    snapshot.forEach(function (childSnapshot) {\n      var item = childSnapshot.val();\n      item.key = childSnapshot.key;\n      returnArr.push(item);\n    });\n    setNotes(returnArr);\n  }\n\n  return (\n    <>\n      <Search setQuery={setQuery} />\n      {!notes.length ? (\n        <CircularProgress />\n      ) : (\n        <CategoryTabs\n          notes={notes.filter(\n            (item) => item.value.indexOf(query.toLowerCase()) !== -1\n          )}\n        />\n      )}\n\n      <CreateNoteDialog\n        open={open}\n        setOpen={(v) => setOpen(v)}\n        note={note}\n        setNote={setNote}\n        category={category}\n        setCategory={setCategory}\n        createNote={createNote}\n      />\n      <Box position='fixed' bottom='20px' right='20px'>\n        <Fab\n          onClick={() => setOpen(true)}\n          style={{ background: '#ffa600', color: 'white' }}\n          aria-label='add'>\n          <AddIcon />\n        </Fab>\n      </Box>\n    </>\n  );\n}\n\nexport default Notes;\n","import React, { createContext } from 'react';\nimport './App.css';\nimport { Container, Box } from '@material-ui/core';\nimport Notes from './components/Notes';\n\nexport const Context = createContext('');\n\nfunction App() {\n  const [selectedNote, setSelectedNote] = React.useState(null);\n  return (\n    <>\n      <Context.Provider\n        value={{\n          selectedNote: selectedNote,\n          setSelectedNote: (v) => setSelectedNote(v),\n        }}>\n        <Container maxWidth='md'>\n          <Box\n            bgcolor='black'\n            position='relative'\n            width='100%'\n            height='100vh'\n            overflow='auto'>\n            <h1 className='heading'>Notes</h1>\n            <Notes />\n          </Box>\n        </Container>\n      </Context.Provider>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}